@using SuperCreation.Abp.CodeDocs.Code
@using Masa.Blazor.Presets
@inherits CodeDocsComponentBase

<MCard>
    <MDataTable FixedRight Stripe Dense
                Headers="DataTableHeaders"
                Items="Entities" FooterProps="FooterProps">
        <TopContent>
            <MToolbar Flat>
                <MToolbarTitle>@L["CodeFunctionManagement"]</MToolbarTitle>
                <MDivider Inset Vertical/><MSpacer/>
                <MButton OnClick="OnCreateClickAsync">
                    <MIcon>
                        new-box
                    </MIcon>
                    @L["NewItem"]
                </MButton>
            </MToolbar>
        </TopContent>
        <ItemColContent>
            @switch (context.Header.Value)
            {
                case "actions":
                    <MIcon Small OnClick="() => OnDetailClickAsync(context.Item)">text_snippet</MIcon>
                    <MIcon Small OnClick="() => OnUpdateClickAsync(context.Item)">edit</MIcon>
                    <MIcon Small OnClick="() => OnDeleteClickAsync(context.Item)">delete</MIcon>
                    break;
                case nameof(CodeFunctionDto.IsStatic):
                case nameof(CodeFunctionDto.IsVirtual):
                {
                    bool tmp = (bool)(context.Value);
                    <MIcon Color="@( tmp? "green accent-4" : "deep-orange accent-4")" Small>
                        @(tmp ? "done" : "clear")"
                    </MIcon>
                }
                    break;
                case $"{nameof(CodeFunctionDto.Return)}.{nameof(CodeClassLookupDto.Name)}":
                    @(context.Item.Return?.Name ?? "void")
                    break;
                default:
                    @context.Value
                    break;
            }
        </ItemColContent>
    </MDataTable>
</MCard>
@if (Detail is not null)
{
    <PDrawer @bind-Value="Drawer"
             AutoScrollToTop
             Title="@Detail.Name"
             Width="500"
             OnCancel="OnCancelDetailClickAsync">
        <FunctionParameterManagement FunctionId="Detail.Id" SelectItems="SelectItems"/>
    </PDrawer>
}

<EntityModal @ref="CreateModal" Modal="EntityCreateDto" Title="@L["CreateEntity"]" OnSave="OnCreateAsync">
    <MTextField Label="@L["Name"]" @bind-Value="EntityCreateDto.Name" />
    <MTextarea AutoGrow Label="@L["Annotation"]" @bind-Value="EntityCreateDto.Annotation" />
    <MCheckbox Label="@L["IsStatic"]" @bind-Value="EntityCreateDto.IsStatic" />
    <MCheckbox Label="@L["IsVirtual"]" @bind-Value="EntityCreateDto.IsVirtual" />
    <MAutocomplete Label="@L["Return"]" TItem="CodeClassSelectDto" TValue="Guid?" TItemValue="Guid"
                   Items="SelectItems" @bind-Value="EntityCreateDto.ReturnId"
                   Clearable OnClearClick="()=>EntityCreateDto.ReturnId=null"
                   ItemText="r=>r.Name"
                   ItemValue="r=>r.Id" />
</EntityModal>

<EntityModal @ref="UpdateModal" Modal="EntityUpdateDto" Title="@L["UpdateEntity"]" OnSave="OnUpdateAsync">
    <MTextarea AutoGrow Label="@L["Annotation"]" @bind-Value="EntityUpdateDto.Annotation" />
    <MCheckbox Label="@L["IsStatic"]" @bind-Value="EntityUpdateDto.IsStatic" />
    <MCheckbox Label="@L["IsVirtual"]" @bind-Value="EntityUpdateDto.IsVirtual" />
    <MAutocomplete Label="@L["Return"]" TItem="CodeClassSelectDto" TValue="Guid?" TItemValue="Guid"
                   Items="SelectItems" @bind-Value="EntityUpdateDto.ReturnId"
                   ItemText="r=>r.Name"
                   ItemValue="r=>r.Id" />
</EntityModal>