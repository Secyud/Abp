@page "/code-docs/class"
@namespace Secyud.Abp.Pages.CodeDocsManagement
@inherits AbpCrudPageBase<ICodeClassAppService, CodeClassDto, Guid, GetCodeClassListInput, CreateCodeClassInput, UpdateCodeClassInput>
@attribute [Authorize(CodeDocsPermissions.CodeClass.Default)]

<MCard>
    <MCardTitle>
        <PageHeader Title="@L["CodeClass"]"
                    BreadcrumbItems="@BreadcrumbItems"
                    Toolbar="@Toolbar"/>
    </MCardTitle>
    <MCardText>
        <MRow>
            <MTextField @bind-Value="GetListInput.Name" 
                        Label="@L["SearchName"]" 
                        Clearable 
                        AppendIcon="@IconName.Search"/>
        </MRow>
        
        <AbpExtensibleDataGrid TItem="CodeClassDto"
                               Items="@Entities"
                               Headers="CodeClassHeaders"
                               EntityActions="CodeClassEntityActions"
                               OnOptionsUpdate="@OnOptionsUpdateAsync"
                               TotalItems="TotalCount"
                               ActionType="ActionType.Button">
            <ColTemplate>
                @switch (context.Header.Value)
                {
                    case nameof(CodeClassDto.IsVisible):
                        if ((bool)context.Value)
                        {
                            <MIcon Color="green accent-4" Small>
                                mdi-check-circle
                            </MIcon>
                        }
                        else
                        {
                            <MIcon Color="deep-orange accent-4" Small>
                                mdi-close-circle-outline
                            </MIcon>
                        }
                        break;
                    case nameof(CodeClassDto.ParentId):
                        if ((Guid)context.Value != default)
                        {
                            @CodeClassSelectList.FirstOrDefault(u => u.Value == (Guid)context.Value)?.Name
                        }
                        break;
                    default:
                        @context.Value
                        break;
                }
            </ColTemplate>
        </AbpExtensibleDataGrid>
    </MCardText>
</MCard>

<PModal @bind-Value="CreateModalVisible"
        FormModel="@NewEntity"
        Title="@L["CreateEntity"]"
        OnSave="@CreateEntityAsync"
        OnCancel="CloseCreateModalAsync">
    <MTextField Label="@L["Name"]" @bind-Value="NewEntity.Name"/>
    <MTextarea AutoGrow Label="@L["Description"]" @bind-Value="NewEntity.Description"/>
    <MTextarea AutoGrow Label="@L["Annotation"]" @bind-Value="NewEntity.Annotation"/>
    <MCheckbox Label="@L["IsVisible"]" @bind-Value="NewEntity.IsVisible"/>
    <MAutocomplete TItem="NameValue<Guid>" TValue="Guid" TItemValue="Guid"
                   @bind-Value="NewEntity.ParentId"
                   Label="@L["ParentClass"]"
                   Items="@CodeClassSelectList" Clearable
                   ItemText="r => r.Name"
                   ItemValue="r => r.Value"
                   OnClearClick="() => NewEntity.ParentId = default"/>
</PModal>

<PModal @bind-Value="EditModalVisible"
        FormModel="EditingEntity"
        Title="@L["UpdateEntity"]"
        OnSave="UpdateEntityAsync"
        OnCancel="CloseEditModalAsync">
    <MTextField Label="@L["Name"]" @bind-Value="EditingEntity.Name"/>
    <MTextarea AutoGrow Label="@L["Description"]" @bind-Value="EditingEntity.Description"/>
    <MTextarea AutoGrow Label="@L["Annotation"]" @bind-Value="EditingEntity.Annotation"/>
    <MCheckbox Label="@L["IsVisible"]" @bind-Value="EditingEntity.IsVisible"/>
    <MAutocomplete TItem="NameValue<Guid>" TValue="Guid" TItemValue="Guid" 
                   @bind-Value="EditingEntity.ParentId" 
                   Label="@L["ParentClass"]" 
                   Items="CodeClassSelectList" Clearable
                   ItemText="r => r.Name"
                   ItemValue="r => r.Value"
                   OnClearClick="() => EditingEntity.ParentId = default"/>
</PModal>