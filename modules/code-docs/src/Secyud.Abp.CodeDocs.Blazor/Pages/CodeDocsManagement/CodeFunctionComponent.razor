@namespace Secyud.Abp.Pages.CodeDocsManagement
@inherits AbpCrudPageBase<ICodeFunctionAppService, CodeFunctionDto, Guid, GetCodeFunctionListInput, CreateCodeFunctionInput, UpdateCodeFunctionInput>
@attribute [Authorize(CodeDocsPermissions.CodeFunction.Default)]

<MCard>
    <MCardTitle>
        <PageHeader Title="@L["CodeFunction"]"
                    Toolbar="Toolbar"/>
    </MCardTitle>
    <MCardText>
        <AbpExtensibleDataGrid TItem="CodeFunctionDto"
                               Items="Entities"
                               TotalItems="TotalCount"
                               ActionType="ActionType.Button"
                               EntityActions="CodeFunctionEntityActions"
                               OnOptionsUpdate="OnOptionsUpdateAsync"
                               Headers="CodeFunctionHeaders">
            <ColTemplate>
                @switch (context.Header.Value)
                {
                    case nameof(CodeFunctionDto.IsStatic):
                    case nameof(CodeFunctionDto.IsVirtual):
                        if ((bool)context.Value)
                        {
                            <MIcon Color="green accent-4" Small>
                                mdi-check-circle
                            </MIcon>
                        }
                        else
                        {
                            <MIcon Color="deep-orange accent-4" Small>
                                mdi-close-circle-outline
                            </MIcon>
                        }
                        break;
                    case nameof(CodeFunctionDto.ReturnId):
                        @CodeClassNameValueList.FirstOrDefault(u => u.Value == (Guid)context.Value)?.Name
                        break;
                    default:
                        @context.Value
                        break;
                }
            </ColTemplate>
        </AbpExtensibleDataGrid>
    </MCardText>
</MCard>
<PModal @bind-Value="CreateModalVisible"
        FormModel="@NewEntity"
        Title="@L["CreateEntity"]"
        OnSave="@CreateEntityAsync"
        OnCancel="CloseCreateModalAsync">
    <MTextField Label="@L["Name"]" @bind-Value="NewEntity.Name"/>
    <MTextarea AutoGrow Label="@L["Annotation"]" @bind-Value="NewEntity.Annotation"/>
    <MCheckbox Label="@L["IsStatic"]" @bind-Value="NewEntity.IsStatic"/>
    <MCheckbox Label="@L["IsVirtual"]" @bind-Value="NewEntity.IsVirtual"/>
    <MAutocomplete TItem="NameValue<Guid>" TValue="Guid" TItemValue="Guid"
                   @bind-Value="NewEntity.ReturnId"
                   Label="@L["ParentClass"]"
                   Items="@CodeClassNameValueList" Clearable
                   ItemText="r => r.Name"
                   ItemValue="r => r.Value"
                   OnClearClick="() => NewEntity.ReturnId = default"/>
</PModal>

<PModal @bind-Value="EditModalVisible"
        FormModel="EditingEntity"
        Title="@L["UpdateEntity"]"
        OnSave="UpdateEntityAsync"
        OnCancel="CloseEditModalAsync">
    <MTextField Label="@L["Name"]" @bind-Value="EditingEntity.Name"/>
    <MTextarea AutoGrow Label="@L["Annotation"]" @bind-Value="EditingEntity.Annotation"/>
    <MCheckbox Label="@L["IsStatic"]" @bind-Value="EditingEntity.IsStatic"/>
    <MCheckbox Label="@L["IsVirtual"]" @bind-Value="EditingEntity.IsVirtual"/>
    <MAutocomplete TItem="NameValue<Guid>" TValue="Guid" TItemValue="Guid"
                   @bind-Value="EditingEntity.ReturnId"
                   Label="@L["ParentClass"]"
                   Items="CodeClassNameValueList" Clearable
                   ItemText="r => r.Name"
                   ItemValue="r => r.Value"
                   OnClearClick="() => EditingEntity.ReturnId = default"/>
</PModal>