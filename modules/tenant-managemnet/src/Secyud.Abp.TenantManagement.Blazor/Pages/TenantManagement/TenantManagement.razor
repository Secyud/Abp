@page "/tenant-management/tenants"
@namespace Secyud.Abp.Pages.TenantManagement
@attribute [Authorize(TenantManagementPermissions.Tenants.Default)]
@using Microsoft.AspNetCore.Authorization
@using Secyud.Abp.AspNetCore.Components.Web.Theming.Layout
@using Secyud.Abp.Components.FeatureManagement
@using Volo.Abp.TenantManagement
@inherits AbpCrudPageBase<Volo.Abp.TenantManagement.ITenantAppService, Volo.Abp.TenantManagement.TenantDto, Guid, Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.TenantUpdateDto>

<MCard>
    <MCardTitle>
        <PageHeader Title="@L["Tenants"]"
                    BreadcrumbItems="@BreadcrumbItems"
                    Toolbar="@Toolbar"/>
    </MCardTitle>
    <MCardText>
        <AbpExtensibleDataGrid TItem="TenantDto"
                               Items="@Entities"
                               TotalItems="@TotalCount"
                               EntityActions="@TenantManagementEntityActions"
                               Headers="@TenantManagementTableHeaders"
                               OnOptionsUpdate="@OnOptionsUpdateAsync"/>
    </MCardText>
</MCard>

@if (HasCreatePermission)
{
    <PModal @bind-Value="CreateModalVisible"
            Title="@L["NewTenant"]"
            FormModel="@NewEntity"
            OnCancel="@CloseCreateModalAsync"
            OnSave="@CreateEntityAsync">
        <MTextField @bind-Value="@NewEntity.Name"
                    Label="@($"{L["TenantName"]} *")"
                    Autofocus/>
        <MTextField @bind-Value="@NewEntity.AdminEmailAddress"
                    Label="@($"{L["DisplayName:AdminEmailAddress"]} *")"/>

        <MTextField @bind-Value="@NewEntity.AdminPassword"
                    Label="@($"{L["DisplayName:AdminPassword"]} *")"
                    AppendIcon="@(_createPasswordShow ? "mdi-eye" : "mdi-eye-off")"
                    OnAppendClick="() => _createPasswordShow = !_createPasswordShow"
                    Type="@(_createPasswordShow ? "text" : "password")"/>
    </PModal>
}

@if (HasUpdatePermission)
{
    <PModal @bind-Value="EditModalVisible"
            Title="@L["Edit"]"
            FormModel="@EditingEntity"
            OnCancel="@CloseEditModalAsync"
            OnSave="@UpdateEntityAsync">
        <MTextField @bind-Value="@EditingEntity.Name"
                    Label="@($"{L["TenantName"]} *")"
                    Autofocus/>
    </PModal>
}

@if (HasManageFeaturesPermission)
{
    <FeatureManagementModal @ref="FeatureManagementModal"/>
}