@using global::Localization.Resources.AbpUi
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using Secyud.Abp.AspNetCore.Components.Routing
@using Secyud.Abp.AspNetCore.Styles
@inject IOptions<AbpRouterOptions> RouterOptions
@inject IStringLocalizer<AbpUiResource> UiLocalizer
@inject IOptions<SecitsThemeOptions> SectsThemeOptions

<CascadingAuthenticationState>
    <Router AppAssembly="RouterOptions.Value.AppAssembly"
            AdditionalAssemblies="RouterOptions.Value.AdditionalAssemblies">
        <Found Context="routeData">
            <CascadingValue Value="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@SectsThemeOptions.Value.Layout">
                    <NotAuthorized>
                        @if (context.User.Identity?.IsAuthenticated != true)
                        {
                            <RedirectToLogin/>
                        }
                        else
                        {
                            <ErrorView
                                Title="@UiLocalizer["403Message"]"
                                HttpStatusCode="403"
                                Message="@UiLocalizer["403MessageDetail"]"/>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            </CascadingValue>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <ErrorView
                    Title="@UiLocalizer["404Message"]"
                    HttpStatusCode="404"
                    Message="@UiLocalizer["404MessageDetail"]"/>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
