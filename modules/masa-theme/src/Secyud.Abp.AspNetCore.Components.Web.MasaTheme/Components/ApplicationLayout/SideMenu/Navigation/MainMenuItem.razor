@inject NavigationManager NavigationManager

@if (MenuItem.MenuItem.IsLeaf)
{
    var currentUri = new Uri(NavigationManager.Uri);

    var url = MenuItem.MenuItem.Url == null ? "#" : MenuItem.MenuItem.Url.TrimStart('/', '~');

    <MListItem Dense Href="@(currentUri.PathAndQuery == MenuItem.MenuItem.Url?.TrimStart('~') ? null : url)">
        @if (!MenuItem.MenuItem.Icon.IsNullOrEmpty() || MenuItem.Parent is null)
        {
            <MListItemIcon>
                <MIcon>
                    @MenuItem.MenuItem.Icon
                </MIcon>
            </MListItemIcon>
        }
        <MListItemTitle>
            @MenuItem.MenuItem.DisplayName
        </MListItemTitle>
    </MListItem>
}
else
{
    <MListGroup Value="@MenuItem.IsOpen"
                ValueChanged="@ToggleMenu"
                Class="@MenuItem.MenuItem.CssClass"
                PrependIcon="@MenuItem.MenuItem.Icon"
                NoAction SubGroup>
        <ActivatorContent>
            <MListItemTitle>@MenuItem.MenuItem.DisplayName</MListItemTitle>
        </ActivatorContent>
        <ChildContent>
            @foreach (var childMenuItem in MenuItem.Items)
            {
                <MainMenuItem Menu="@Menu" MenuItem="@childMenuItem"/>
            }
        </ChildContent>
    </MListGroup>
}